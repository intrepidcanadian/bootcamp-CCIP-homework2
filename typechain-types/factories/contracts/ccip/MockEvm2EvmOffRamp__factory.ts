/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockEvm2EvmOffRamp,
  MockEvm2EvmOffRampInterface,
  RateLimiter,
} from "../../../contracts/ccip/MockEvm2EvmOffRamp";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ccipLocalSimulator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "permissionLessExecutionThresholdSeconds",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "priceRegistry",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "maxNumberOfTokensPerMsg",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "maxDataBytes",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxPoolReleaseOrMintGas",
            type: "uint32",
          },
        ],
        internalType: "struct MockEvm2EvmOffRamp.DynamicConfig",
        name: "dynamicConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "isEnabled",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "capacity",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "rate",
            type: "uint128",
          },
        ],
        internalType: "struct RateLimiter.Config",
        name: "config",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        internalType: "address[]",
        name: "sourceTokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "capacity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
    ],
    name: "AggregateValueMaxCapacityExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minWaitInSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "AggregateValueRateLimitReached",
    type: "error",
  },
  {
    inputs: [],
    name: "BucketOverfilled",
    type: "error",
  },
  {
    inputs: [],
    name: "CanOnlySimulatorCall",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyCallableByAdminOrOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "PriceNotFoundForToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "error",
        type: "bytes",
      },
    ],
    name: "ReceiverError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "error",
        type: "bytes",
      },
    ],
    name: "TokenHandlingError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "capacity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "TokenMaxCapacityExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minWaitInSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "TokenRateLimitReached",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRateLimiterState",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "tokens",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "lastUpdated",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isEnabled",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "capacity",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "rate",
            type: "uint128",
          },
        ],
        internalType: "struct RateLimiter.TokenBucket",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "sequenceNumber",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "strict",
            type: "bool",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feeTokenAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "bytes[]",
            name: "sourceTokenData",
            type: "bytes[]",
          },
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
        ],
        internalType: "struct Internal.EVM2EVMMessage",
        name: "message",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "offchainTokenData",
        type: "bytes[]",
      },
    ],
    name: "executeSingleMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "sourceToken",
        type: "address",
      },
    ],
    name: "getPoolBySourceToken",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenLimitAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isEnabled",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "capacity",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "rate",
            type: "uint128",
          },
        ],
        internalType: "struct RateLimiter.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "setRateLimiterConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type MockEvm2EvmOffRampConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockEvm2EvmOffRampConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockEvm2EvmOffRamp__factory extends ContractFactory {
  constructor(...args: MockEvm2EvmOffRampConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ccipLocalSimulator: PromiseOrValue<string>,
    dynamicConfig: MockEvm2EvmOffRamp.DynamicConfigStruct,
    config: RateLimiter.ConfigStruct,
    sourceChainSelector: PromiseOrValue<BigNumberish>,
    sourceTokens: PromiseOrValue<string>[],
    pools: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockEvm2EvmOffRamp> {
    return super.deploy(
      ccipLocalSimulator,
      dynamicConfig,
      config,
      sourceChainSelector,
      sourceTokens,
      pools,
      overrides || {}
    ) as Promise<MockEvm2EvmOffRamp>;
  }
  override getDeployTransaction(
    ccipLocalSimulator: PromiseOrValue<string>,
    dynamicConfig: MockEvm2EvmOffRamp.DynamicConfigStruct,
    config: RateLimiter.ConfigStruct,
    sourceChainSelector: PromiseOrValue<BigNumberish>,
    sourceTokens: PromiseOrValue<string>[],
    pools: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      ccipLocalSimulator,
      dynamicConfig,
      config,
      sourceChainSelector,
      sourceTokens,
      pools,
      overrides || {}
    );
  }
  override attach(address: string): MockEvm2EvmOffRamp {
    return super.attach(address) as MockEvm2EvmOffRamp;
  }
  override connect(signer: Signer): MockEvm2EvmOffRamp__factory {
    return super.connect(signer) as MockEvm2EvmOffRamp__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockEvm2EvmOffRampInterface {
    return new utils.Interface(_abi) as MockEvm2EvmOffRampInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockEvm2EvmOffRamp {
    return new Contract(address, _abi, signerOrProvider) as MockEvm2EvmOffRamp;
  }
}
